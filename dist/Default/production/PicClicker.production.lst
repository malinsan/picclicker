

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Apr 02 14:17:14 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           ; Version 1.41
    33                           ; Generated 25/01/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F47J53 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     _RPINR16	set	3831
    67  0000                     _RPOR8	set	3784
    68  0000                     _PPSCON	set	3775
    69  0000                     _RCREG2	set	4010
    70  0000                     _TXREG2	set	4009
    71  0000                     _TXSTA2bits	set	4008
    72  0000                     _TXREG1	set	4014
    73  0000                     _TXSTA1bits	set	4013
    74  0000                     _SPBRGH2	set	3965
    75  0000                     _SPBRG2	set	4011
    76  0000                     _BAUDCON2bits	set	3964
    77  0000                     _TXSTA2	set	4008
    78  0000                     _RCSTA2	set	3996
    79  0000                     _SPBRGH1	set	3967
    80  0000                     _SPBRG1	set	4016
    81  0000                     _BAUDCON1bits	set	3966
    82  0000                     _RCSTA1	set	4012
    83  0000                     _TXSTA1	set	4013
    84  0000                     _INTCON	set	4082
    85  0000                     _OSCTUNEbits	set	3995
    86  0000                     _OSCCONbits	set	4051
    87  0000                     _PORTDbits	set	3971
    88  0000                     _TRISDbits	set	3989
    89  0000                     _TRISAbits	set	3986
    90  0000                     _RCREG1	set	4015
    91  0000                     _LATAbits	set	3977
    92  0000                     _RCIF	set	31989
    93  0000                     _TRISB5	set	31901
    94  0000                     _TRISB4	set	31900
    95  0000                     _RC2IE	set	32029
    96  0000                     _TRISC6	set	31910
    97  0000                     _TRISC7	set	31911
    98  0000                     _RC1IE	set	31981
    99  0000                     _RC2IF	set	32037
   100  0000                     _RC1IF	set	31989
   101                           
   102                           	psect	smallconst
   103  000F00                     __psmallconst:
   104                           	opt stack 0
   105  000F00  00                 	db	0
   106  000F01                     STR_1:
   107  000F01  4C                 	db	76	;'L'
   108  000F02  20                 	db	32
   109  000F03  35                 	db	53	;'5'
   110  000F04  30                 	db	48	;'0'
   111  000F05  00                 	db	0
   112  000F06                     STR_2:
   113  000F06  44                 	db	68	;'D'
   114  000F07  20                 	db	32
   115  000F08  38                 	db	56	;'8'
   116  000F09  00                 	db	0
   117  0000                     
   118                           ; #config settings
   119  000F0A  00                 	db	0	; dummy byte at the end
   120  0000                     
   121                           	psect	cinit
   122  001298                     __pcinit:
   123                           	opt stack 0
   124  001298                     start_initialization:
   125                           	opt stack 0
   126  001298                     __initialization:
   127                           	opt stack 0
   128                           
   129                           ; Clear objects allocated to BANK0 (140 bytes)
   130  001298  EE00  F060         	lfsr	0,__pbssBANK0
   131  00129C  0E8C               	movlw	140
   132  00129E                     clear_0:
   133  00129E  6AEE               	clrf	postinc0,c
   134  0012A0  06E8               	decf	wreg,f,c
   135  0012A2  E1FD               	bnz	clear_0
   136                           
   137                           ; Clear objects allocated to COMRAM (6 bytes)
   138  0012A4  6A37               	clrf	(__pbssCOMRAM+5)& (0+255),c
   139  0012A6  6A36               	clrf	(__pbssCOMRAM+4)& (0+255),c
   140  0012A8  6A35               	clrf	(__pbssCOMRAM+3)& (0+255),c
   141  0012AA  6A34               	clrf	(__pbssCOMRAM+2)& (0+255),c
   142  0012AC  6A33               	clrf	(__pbssCOMRAM+1)& (0+255),c
   143  0012AE  6A32               	clrf	__pbssCOMRAM& (0+255),c
   144  0012B0                     end_of_initialization:
   145                           	opt stack 0
   146  0012B0                     __end_of__initialization:
   147                           	opt stack 0
   148  0012B0  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   149  0012B2  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   150  0012B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   151  0012B6  6EF8               	movwf	tblptru,c
   152  0012B8  0100               	movlb	0
   153  0012BA  EF86  F007         	goto	_main	;jump to C main() function
   154                           tblptru	equ	0xFF8
   155                           postinc0	equ	0xFEE
   156                           wreg	equ	0xFE8
   157                           
   158                           	psect	bssCOMRAM
   159  000032                     __pbssCOMRAM:
   160                           	opt stack 0
   161  000032                     wait_ms@timel:
   162                           	opt stack 0
   163  000032                     	ds	4
   164  000036                     _index:
   165                           	opt stack 0
   166  000036                     	ds	2
   167                           tblptru	equ	0xFF8
   168                           postinc0	equ	0xFEE
   169                           wreg	equ	0xFE8
   170                           
   171                           	psect	bssBANK0
   172  000060                     __pbssBANK0:
   173                           	opt stack 0
   174  000060                     _realString:
   175                           	opt stack 0
   176  000060                     	ds	70
   177  0000A6                     _tmpString:
   178                           	opt stack 0
   179  0000A6                     	ds	70
   180                           tblptru	equ	0xFF8
   181                           postinc0	equ	0xFEE
   182                           wreg	equ	0xFE8
   183                           
   184                           	psect	cstackCOMRAM
   185  000001                     __pcstackCOMRAM:
   186                           	opt stack 0
   187  000001                     appendChar@data:
   188                           	opt stack 0
   189                           
   190                           ; 1 bytes @ 0x0
   191  000001                     	ds	1
   192  000002                     ??_high_isr:
   193                           
   194                           ; 1 bytes @ 0x1
   195  000002                     	ds	15
   196  000011                     ??_low_isr:
   197                           
   198                           ; 1 bytes @ 0x10
   199  000011                     	ds	17
   200  000022                     ??_copyTmpBuffer:
   201  000022                     ?_strlen:
   202                           	opt stack 0
   203  000022                     ?___lmul:
   204                           	opt stack 0
   205  000022                     UART_Write@dev:
   206                           	opt stack 0
   207  000022                     strlen@s:
   208                           	opt stack 0
   209  000022                     UART_Init@baudrate:
   210                           	opt stack 0
   211  000022                     ___lmul@multiplier:
   212                           	opt stack 0
   213                           
   214                           ; 4 bytes @ 0x21
   215  000022                     	ds	1
   216  000023                     UART_Write@data:
   217                           	opt stack 0
   218  000023                     copyTmpBuffer@i:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0x22
   222  000023                     	ds	1
   223  000024                     ??_strlen:
   224                           
   225                           ; 1 bytes @ 0x23
   226  000024                     	ds	2
   227  000026                     strlen@cp:
   228                           	opt stack 0
   229  000026                     ___lmul@multiplicand:
   230                           	opt stack 0
   231                           
   232                           ; 4 bytes @ 0x25
   233  000026                     	ds	2
   234  000028                     writeString@str:
   235                           	opt stack 0
   236  000028                     clearBuffer@i:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0x27
   240  000028                     	ds	2
   241  00002A                     writeString@dev:
   242                           	opt stack 0
   243  00002A                     ___lmul@product:
   244                           	opt stack 0
   245                           
   246                           ; 4 bytes @ 0x29
   247  00002A                     	ds	1
   248  00002B                     ??_writeString:
   249                           
   250                           ; 1 bytes @ 0x2A
   251  00002B                     	ds	2
   252  00002D                     writeString@i:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x2C
   256  00002D                     	ds	1
   257  00002E                     wait_ms@time:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x2D
   261  00002E                     	ds	2
   262  000030                     writeResult@dev:
   263                           	opt stack 0
   264                           
   265                           ; 1 bytes @ 0x2F
   266  000030                     	ds	1
   267  000031                     main@var:
   268                           	opt stack 0
   269                           
   270                           ; 1 bytes @ 0x30
   271  000031                     	ds	1
   272                           tblptru	equ	0xFF8
   273                           postinc0	equ	0xFEE
   274                           wreg	equ	0xFE8
   275                           
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 39 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;  var             1   48[COMRAM] unsigned char 
   286 ;;  result          1    0        unsigned char 
   287 ;; Return value:  Size  Location     Type
   288 ;;                  1    wreg      void 
   289 ;; Registers used:
   290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   291 ;; Tracked objects:
   292 ;;		On entry : 0/0
   293 ;;		On exit  : 0/0
   294 ;;		Unchanged: 0/0
   295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   299 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   300 ;;Total ram usage:        1 bytes
   301 ;; Hardware stack levels required when called:    6
   302 ;; This function calls:
   303 ;;		_ConfigureOscillator
   304 ;;		_InitApp
   305 ;;		_UART_Init
   306 ;;		_UART_Write
   307 ;;		_clearBuffer
   308 ;;		_copyTmpBuffer
   309 ;;		_isItLongEnough
   310 ;;		_isValid
   311 ;;		_wait_ms
   312 ;;		_writeResult
   313 ;;		_writeString
   314 ;; This function is called by:
   315 ;;		Startup code after reset
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319                           	psect	text0
   320  000F0C                     __ptext0:
   321                           	opt stack 0
   322  000F0C                     _main:
   323                           	opt stack 25
   324                           
   325                           ;main.c: 45: ConfigureOscillator();
   326                           
   327                           ;incstack = 0
   328  000F0C  ECA1  F009         	call	_ConfigureOscillator	;wreg free
   329                           
   330                           ;main.c: 48: InitApp();
   331  000F10  EC6F  F009         	call	_InitApp	;wreg free
   332                           
   333                           ;main.c: 50: UART_Init(19200);
   334  000F14  0E00               	movlw	0
   335  000F16  6E22               	movwf	UART_Init@baudrate,c
   336  000F18  0E4B               	movlw	75
   337  000F1A  6E23               	movwf	UART_Init@baudrate+1,c
   338  000F1C  0E00               	movlw	0
   339  000F1E  6E24               	movwf	UART_Init@baudrate+2,c
   340  000F20  0E00               	movlw	0
   341  000F22  6E25               	movwf	UART_Init@baudrate+3,c
   342  000F24  EC33  F009         	call	_UART_Init	;wreg free
   343                           
   344                           ;main.c: 51: writeString("L 50", 1);
   345  000F28  0E01               	movlw	low STR_1
   346  000F2A  6E28               	movwf	writeString@str,c
   347  000F2C  0E0F               	movlw	high STR_1
   348  000F2E  6E29               	movwf	writeString@str+1,c
   349  000F30  0E01               	movlw	1
   350  000F32  6E2A               	movwf	writeString@dev,c
   351  000F34  EC24  F008         	call	_writeString	;wreg free
   352                           
   353                           ;main.c: 52: UART_Write(0x0D,1);
   354  000F38  0E01               	movlw	1
   355  000F3A  6E22               	movwf	UART_Write@dev,c
   356  000F3C  0E0D               	movlw	13
   357  000F3E  EC7E  F009         	call	_UART_Write
   358                           
   359                           ;main.c: 53: writeString("D 8", 1);
   360  000F42  0E06               	movlw	low STR_2
   361  000F44  6E28               	movwf	writeString@str,c
   362  000F46  0E0F               	movlw	high STR_2
   363  000F48  6E29               	movwf	writeString@str+1,c
   364  000F4A  0E01               	movlw	1
   365  000F4C  6E2A               	movwf	writeString@dev,c
   366  000F4E  EC24  F008         	call	_writeString	;wreg free
   367                           
   368                           ;main.c: 54: UART_Write(0x0D,1);
   369  000F52  0E01               	movlw	1
   370  000F54  6E22               	movwf	UART_Write@dev,c
   371  000F56  0E0D               	movlw	13
   372  000F58  EC7E  F009         	call	_UART_Write
   373                           
   374                           ;main.c: 56: uint8_t var = 0;
   375  000F5C  0E00               	movlw	0
   376  000F5E  6E31               	movwf	main@var,c
   377                           
   378                           ;main.c: 57: char result;
   379                           ;main.c: 60: TRISAbits.TRISA0 = 0;
   380  000F60  9092               	bcf	3986,0,c	;volatile
   381                           
   382                           ;main.c: 61: TRISAbits.TRISA1 = 0;
   383  000F62  9292               	bcf	3986,1,c	;volatile
   384                           
   385                           ;main.c: 62: LATAbits.LATA0 = 0;
   386  000F64  9089               	bcf	3977,0,c	;volatile
   387                           
   388                           ;main.c: 63: LATAbits.LATA1 = 0;
   389  000F66  9289               	bcf	3977,1,c	;volatile
   390                           
   391                           ;main.c: 64: TRISDbits.TRISD3 = 1;
   392  000F68  8695               	bsf	3989,3,c	;volatile
   393                           
   394                           ;main.c: 66: clearBuffer();
   395  000F6A  ECD3  F008         	call	_clearBuffer	;wreg free
   396  000F6E                     l1167:
   397                           
   398                           ;main.c: 71: if(isItLongEnough()){
   399  000F6E  EC98  F009         	call	_isItLongEnough	;wreg free
   400  000F72  0900               	iorlw	0
   401  000F74  B4D8               	btfsc	status,2,c
   402  000F76  D014               	goto	l52
   403                           
   404                           ;main.c: 72: if(isValid()){
   405  000F78  EC16  F009         	call	_isValid	;wreg free
   406  000F7C  0900               	iorlw	0
   407  000F7E  B4D8               	btfsc	status,2,c
   408  000F80  D00C               	goto	l1179
   409                           
   410                           ;main.c: 73: LATAbits.LATA1 = 1;
   411  000F82  8289               	bsf	3977,1,c	;volatile
   412                           
   413                           ;main.c: 74: wait_ms(1000);
   414  000F84  0E03               	movlw	3
   415  000F86  6E2F               	movwf	wait_ms@time+1,c
   416  000F88  0EE8               	movlw	232
   417  000F8A  6E2E               	movwf	wait_ms@time,c
   418  000F8C  EC53  F008         	call	_wait_ms	;wreg free
   419                           
   420                           ;main.c: 75: copyTmpBuffer();
   421  000F90  ECF6  F008         	call	_copyTmpBuffer	;wreg free
   422                           
   423                           ;main.c: 76: clearBuffer();
   424  000F94  ECD3  F008         	call	_clearBuffer	;wreg free
   425                           
   426                           ;main.c: 77: }else{
   427  000F98  D004               	goto	l55
   428  000F9A                     l1179:
   429                           
   430                           ;main.c: 78: clearBuffer();
   431  000F9A  ECD3  F008         	call	_clearBuffer	;wreg free
   432                           
   433                           ;main.c: 79: }
   434                           ;main.c: 80: }else{
   435  000F9E  D001               	goto	l55
   436  000FA0                     l52:
   437                           
   438                           ;main.c: 81: LATAbits.LATA1 = 0;
   439  000FA0  9289               	bcf	3977,1,c	;volatile
   440  000FA2                     l55:
   441                           
   442                           ;main.c: 82: }
   443                           ;main.c: 84: if(!PORTDbits.RD3){
   444  000FA2  B683               	btfsc	3971,3,c	;volatile
   445  000FA4  D7E4               	goto	l1167
   446                           
   447                           ;main.c: 85: writeResult(2);
   448  000FA6  0E02               	movlw	2
   449  000FA8  EC5F  F009         	call	_writeResult
   450  000FAC  D7E0               	goto	l1167
   451  000FAE                     __end_of_main:
   452                           	opt stack 0
   453                           tblptru	equ	0xFF8
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           status	equ	0xFD8
   457                           
   458 ;; *************** function _writeResult *****************
   459 ;; Defined at:
   460 ;;		line 53 in file "bufferhandler.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  dev             1    wreg     unsigned char 
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  dev             1   47[COMRAM] unsigned char 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   477 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   478 ;;Total ram usage:        1 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; Hardware stack levels required when called:    5
   481 ;; This function calls:
   482 ;;		_wait_ms
   483 ;;		_writeString
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text1
   490  0012BE                     __ptext1:
   491                           	opt stack 0
   492  0012BE                     _writeResult:
   493                           	opt stack 25
   494                           
   495                           ;incstack = 0
   496                           ;writeResult@dev stored from wreg
   497  0012BE  6E30               	movwf	writeResult@dev,c
   498                           
   499                           ;bufferhandler.c: 55: writeString(realString, dev);
   500  0012C0  0E60               	movlw	low _realString
   501  0012C2  6E28               	movwf	writeString@str,c
   502  0012C4  0E00               	movlw	high _realString
   503  0012C6  6E29               	movwf	writeString@str+1,c
   504  0012C8  C030  F02A         	movff	writeResult@dev,writeString@dev
   505  0012CC  EC24  F008         	call	_writeString	;wreg free
   506                           
   507                           ;bufferhandler.c: 56: wait_ms(1000);
   508  0012D0  0E03               	movlw	3
   509  0012D2  6E2F               	movwf	wait_ms@time+1,c
   510  0012D4  0EE8               	movlw	232
   511  0012D6  6E2E               	movwf	wait_ms@time,c
   512  0012D8  EC53  F008         	call	_wait_ms	;wreg free
   513  0012DC  0012               	return		;funcret
   514  0012DE                     __end_of_writeResult:
   515                           	opt stack 0
   516                           tblptru	equ	0xFF8
   517                           postinc0	equ	0xFEE
   518                           wreg	equ	0xFE8
   519                           status	equ	0xFD8
   520                           
   521 ;; *************** function _writeString *****************
   522 ;; Defined at:
   523 ;;		line 97 in file "uart.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;  str             2   39[COMRAM] PTR unsigned char 
   526 ;;		 -> realString(70), STR_2(4), STR_1(5), 
   527 ;;  dev             1   41[COMRAM] unsigned char 
   528 ;; Auto vars:     Size  Location     Type
   529 ;;  i               2   44[COMRAM] int 
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   539 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   541 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   542 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   543 ;;Total ram usage:        7 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; Hardware stack levels required when called:    4
   546 ;; This function calls:
   547 ;;		_UART_Write
   548 ;;		_strlen
   549 ;; This function is called by:
   550 ;;		_main
   551 ;;		_writeResult
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text2
   556  001048                     __ptext2:
   557                           	opt stack 0
   558  001048                     _writeString:
   559                           	opt stack 26
   560                           
   561                           ;uart.c: 99: for(int i = 0; i<strlen(str); i++)
   562                           
   563                           ;incstack = 0
   564  001048  0E00               	movlw	0
   565  00104A  6E2E               	movwf	writeString@i+1,c
   566  00104C  0E00               	movlw	0
   567  00104E  6E2D               	movwf	writeString@i,c
   568  001050  D01D               	goto	l1061
   569  001052                     l1057:
   570                           
   571                           ;uart.c: 100: {
   572                           ;uart.c: 101: UART_Write(str[i], dev);
   573  001052  C02A  F022         	movff	writeString@dev,UART_Write@dev
   574  001056  502D               	movf	writeString@i,w,c
   575  001058  2428               	addwf	writeString@str,w,c
   576  00105A  6E2B               	movwf	??_writeString& (0+255),c
   577  00105C  502E               	movf	writeString@i+1,w,c
   578  00105E  2029               	addwfc	writeString@str+1,w,c
   579  001060  6E2C               	movwf	(??_writeString+1)& (0+255),c
   580  001062  C02B  FFF6         	movff	??_writeString,tblptrl
   581  001066  C02C  FFF7         	movff	??_writeString+1,tblptrh
   582  00106A  0E00               	movlw	low (__smallconst shr (0+16))
   583  00106C  6EF8               	movwf	tblptru,c
   584  00106E  0E0E               	movlw	(high __ramtop+-1)
   585  001070  64F7               	cpfsgt	tblptrh,c
   586  001072  D003               	bra	u367
   587  001074  0008               	tblrd		*
   588  001076  50F5               	movf	tablat,w,c
   589  001078  D005               	bra	u360
   590  00107A                     u367:
   591  00107A  CFF6 FFE9          	movff	tblptrl,fsr0l
   592  00107E  CFF7 FFEA          	movff	tblptrh,fsr0h
   593  001082  50EF               	movf	indf0,w,c
   594  001084                     u360:
   595  001084  EC7E  F009         	call	_UART_Write
   596  001088  4A2D               	infsnz	writeString@i,f,c
   597  00108A  2A2E               	incf	writeString@i+1,f,c
   598  00108C                     l1061:
   599  00108C  C028  F022         	movff	writeString@str,strlen@s
   600  001090  C029  F023         	movff	writeString@str+1,strlen@s+1
   601  001094  ECA9  F008         	call	_strlen	;wreg free
   602  001098  5022               	movf	?_strlen,w,c
   603  00109A  5C2D               	subwf	writeString@i,w,c
   604  00109C  5023               	movf	?_strlen+1,w,c
   605  00109E  582E               	subwfb	writeString@i+1,w,c
   606  0010A0  B0D8               	btfsc	status,0,c
   607  0010A2  0012               	return	
   608  0010A4  D7D6               	goto	l1057
   609  0010A6                     __end_of_writeString:
   610                           	opt stack 0
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           tblptrl	equ	0xFF6
   614                           tablat	equ	0xFF5
   615                           indf0	equ	0xFEF
   616                           postinc0	equ	0xFEE
   617                           fsr0h	equ	0xFEA
   618                           fsr0l	equ	0xFE9
   619                           wreg	equ	0xFE8
   620                           status	equ	0xFD8
   621                           
   622 ;; *************** function _UART_Write *****************
   623 ;; Defined at:
   624 ;;		line 61 in file "uart.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;  data            1    wreg     unsigned char 
   627 ;;  dev             1   33[COMRAM] unsigned char 
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  data            1   34[COMRAM] unsigned char 
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg, status,2, status,0
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   639 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   642 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   643 ;;Total ram usage:        2 bytes
   644 ;; Hardware stack levels used:    1
   645 ;; Hardware stack levels required when called:    3
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_main
   650 ;;		_writeString
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text3
   655  0012FC                     __ptext3:
   656                           	opt stack 0
   657  0012FC                     _UART_Write:
   658                           	opt stack 26
   659                           
   660                           ;incstack = 0
   661                           ;UART_Write@data stored from wreg
   662  0012FC  6E23               	movwf	UART_Write@data,c
   663                           
   664                           ;uart.c: 63: if (dev == 1)
   665  0012FE  0422               	decf	UART_Write@dev,w,c
   666  001300  A4D8               	btfss	status,2,c
   667  001302  D005               	goto	l148
   668  001304                     l144:
   669  001304  A2AD               	btfss	4013,1,c	;volatile
   670  001306  D7FE               	goto	l144
   671                           
   672                           ;uart.c: 66: TXREG1 = data;
   673  001308  C023  FFAE         	movff	UART_Write@data,4014	;volatile
   674                           
   675                           ;uart.c: 67: }
   676  00130C  0012               	return	
   677  00130E                     l148:
   678  00130E  A2A8               	btfss	4008,1,c	;volatile
   679  001310  D7FE               	goto	l148
   680                           
   681                           ;uart.c: 71: TXREG2 = data;
   682  001312  C023  FFA9         	movff	UART_Write@data,4009	;volatile
   683  001316  0012               	return	
   684  001318                     __end_of_UART_Write:
   685                           	opt stack 0
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           indf0	equ	0xFEF
   691                           postinc0	equ	0xFEE
   692                           fsr0h	equ	0xFEA
   693                           fsr0l	equ	0xFE9
   694                           wreg	equ	0xFE8
   695                           status	equ	0xFD8
   696                           
   697 ;; *************** function _wait_ms *****************
   698 ;; Defined at:
   699 ;;		line 35 in file "system.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  time            2   45[COMRAM] int 
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, status,2, status,0, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   716 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   717 ;;Total ram usage:        2 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    4
   720 ;; This function calls:
   721 ;;		___lmul
   722 ;; This function is called by:
   723 ;;		_main
   724 ;;		_writeResult
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           	psect	text4
   729  0010A6                     __ptext4:
   730                           	opt stack 0
   731  0010A6                     _wait_ms:
   732                           	opt stack 25
   733                           
   734                           ;system.c: 37: static long timel = 0;
   735                           ;system.c: 38: timel = time * 1000l;
   736                           
   737                           ;incstack = 0
   738  0010A6  C02E  F022         	movff	wait_ms@time,___lmul@multiplier
   739  0010AA  C02F  F023         	movff	wait_ms@time+1,___lmul@multiplier+1
   740  0010AE  0E00               	movlw	0
   741  0010B0  BE23               	btfsc	___lmul@multiplier+1,7,c
   742  0010B2  0EFF               	movlw	-1
   743  0010B4  6E24               	movwf	___lmul@multiplier+2,c
   744  0010B6  6E25               	movwf	___lmul@multiplier+3,c
   745  0010B8  0EE8               	movlw	232
   746  0010BA  6E26               	movwf	___lmul@multiplicand,c
   747  0010BC  0E03               	movlw	3
   748  0010BE  6E27               	movwf	___lmul@multiplicand+1,c
   749  0010C0  0E00               	movlw	0
   750  0010C2  6E28               	movwf	___lmul@multiplicand+2,c
   751  0010C4  0E00               	movlw	0
   752  0010C6  6E29               	movwf	___lmul@multiplicand+3,c
   753  0010C8  EC7E  F008         	call	___lmul	;wreg free
   754  0010CC  C022  F032         	movff	?___lmul,wait_ms@timel
   755  0010D0  C023  F033         	movff	?___lmul+1,wait_ms@timel+1
   756  0010D4  C024  F034         	movff	?___lmul+2,wait_ms@timel+2
   757  0010D8  C025  F035         	movff	?___lmul+3,wait_ms@timel+3
   758                           
   759                           ;system.c: 39: for( ; timel; timel--);
   760  0010DC  D008               	goto	l71
   761  0010DE                     l1065:
   762  0010DE  0EFF               	movlw	255
   763  0010E0  2632               	addwf	wait_ms@timel,f,c
   764  0010E2  0EFF               	movlw	255
   765  0010E4  2233               	addwfc	wait_ms@timel+1,f,c
   766  0010E6  0EFF               	movlw	255
   767  0010E8  2234               	addwfc	wait_ms@timel+2,f,c
   768  0010EA  0EFF               	movlw	255
   769  0010EC  2235               	addwfc	wait_ms@timel+3,f,c
   770  0010EE                     l71:
   771  0010EE  5032               	movf	wait_ms@timel,w,c
   772  0010F0  1033               	iorwf	wait_ms@timel+1,w,c
   773  0010F2  1034               	iorwf	wait_ms@timel+2,w,c
   774  0010F4  1035               	iorwf	wait_ms@timel+3,w,c
   775  0010F6  B4D8               	btfsc	status,2,c
   776  0010F8  0012               	return	
   777  0010FA  D7F1               	goto	l1065
   778  0010FC                     __end_of_wait_ms:
   779                           	opt stack 0
   780                           tblptru	equ	0xFF8
   781                           tblptrh	equ	0xFF7
   782                           tblptrl	equ	0xFF6
   783                           tablat	equ	0xFF5
   784                           indf0	equ	0xFEF
   785                           postinc0	equ	0xFEE
   786                           fsr0h	equ	0xFEA
   787                           fsr0l	equ	0xFE9
   788                           wreg	equ	0xFE8
   789                           status	equ	0xFD8
   790                           
   791 ;; *************** function ___lmul *****************
   792 ;; Defined at:
   793 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;  multiplier      4   33[COMRAM] unsigned long 
   796 ;;  multiplicand    4   37[COMRAM] unsigned long 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  product         4   41[COMRAM] unsigned long 
   799 ;; Return value:  Size  Location     Type
   800 ;;                  4   33[COMRAM] unsigned long 
   801 ;; Registers used:
   802 ;;		wreg, status,2, status,0
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   808 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   809 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   811 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   812 ;;Total ram usage:       12 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    3
   815 ;; This function calls:
   816 ;;		Nothing
   817 ;; This function is called by:
   818 ;;		_wait_ms
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text5
   823  0010FC                     __ptext5:
   824                           	opt stack 0
   825  0010FC                     ___lmul:
   826                           	opt stack 25
   827                           
   828                           ;incstack = 0
   829  0010FC  0E00               	movlw	0
   830  0010FE  6E2A               	movwf	___lmul@product,c
   831  001100  0E00               	movlw	0
   832  001102  6E2B               	movwf	___lmul@product+1,c
   833  001104  0E00               	movlw	0
   834  001106  6E2C               	movwf	___lmul@product+2,c
   835  001108  0E00               	movlw	0
   836  00110A  6E2D               	movwf	___lmul@product+3,c
   837  00110C                     l1047:
   838  00110C  A022               	btfss	___lmul@multiplier,0,c
   839  00110E  D008               	goto	l1051
   840  001110  5026               	movf	___lmul@multiplicand,w,c
   841  001112  262A               	addwf	___lmul@product,f,c
   842  001114  5027               	movf	___lmul@multiplicand+1,w,c
   843  001116  222B               	addwfc	___lmul@product+1,f,c
   844  001118  5028               	movf	___lmul@multiplicand+2,w,c
   845  00111A  222C               	addwfc	___lmul@product+2,f,c
   846  00111C  5029               	movf	___lmul@multiplicand+3,w,c
   847  00111E  222D               	addwfc	___lmul@product+3,f,c
   848  001120                     l1051:
   849  001120  90D8               	bcf	status,0,c
   850  001122  3626               	rlcf	___lmul@multiplicand,f,c
   851  001124  3627               	rlcf	___lmul@multiplicand+1,f,c
   852  001126  3628               	rlcf	___lmul@multiplicand+2,f,c
   853  001128  3629               	rlcf	___lmul@multiplicand+3,f,c
   854  00112A  90D8               	bcf	status,0,c
   855  00112C  3225               	rrcf	___lmul@multiplier+3,f,c
   856  00112E  3224               	rrcf	___lmul@multiplier+2,f,c
   857  001130  3223               	rrcf	___lmul@multiplier+1,f,c
   858  001132  3222               	rrcf	___lmul@multiplier,f,c
   859  001134  5022               	movf	___lmul@multiplier,w,c
   860  001136  1023               	iorwf	___lmul@multiplier+1,w,c
   861  001138  1024               	iorwf	___lmul@multiplier+2,w,c
   862  00113A  1025               	iorwf	___lmul@multiplier+3,w,c
   863  00113C  A4D8               	btfss	status,2,c
   864  00113E  D7E6               	goto	l1047
   865  001140  C02A  F022         	movff	___lmul@product,?___lmul
   866  001144  C02B  F023         	movff	___lmul@product+1,?___lmul+1
   867  001148  C02C  F024         	movff	___lmul@product+2,?___lmul+2
   868  00114C  C02D  F025         	movff	___lmul@product+3,?___lmul+3
   869  001150  0012               	return		;funcret
   870  001152                     __end_of___lmul:
   871                           	opt stack 0
   872                           tblptru	equ	0xFF8
   873                           tblptrh	equ	0xFF7
   874                           tblptrl	equ	0xFF6
   875                           tablat	equ	0xFF5
   876                           indf0	equ	0xFEF
   877                           postinc0	equ	0xFEE
   878                           fsr0h	equ	0xFEA
   879                           fsr0l	equ	0xFE9
   880                           wreg	equ	0xFE8
   881                           status	equ	0xFD8
   882                           
   883 ;; *************** function _isValid *****************
   884 ;; Defined at:
   885 ;;		line 67 in file "bufferhandler.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      unsigned char 
   892 ;; Registers used:
   893 ;;		wreg, status,2, status,0
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   903 ;;Total ram usage:        0 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:    3
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text6
   914  00122C                     __ptext6:
   915                           	opt stack 0
   916  00122C                     _isValid:
   917                           	opt stack 27
   918                           
   919                           ;bufferhandler.c: 68: if(tmpString[0] == 0x54 &&
   920                           ;bufferhandler.c: 69: tmpString[1] == 0x59 &&
   921                           ;bufferhandler.c: 70: tmpString[2] == 0x52 &&
   922                           ;bufferhandler.c: 71: tmpString[3] == 0x49 &&
   923                           ;bufferhandler.c: 72: tmpString[4] == 0x5F){
   924                           
   925                           ;incstack = 0
   926  00122C  0E54               	movlw	84
   927  00122E  0100               	movlb	0	; () banked
   928  001230  19A6               	xorwf	_tmpString& (0+255),w,b
   929  001232  A4D8               	btfss	status,2,c
   930  001234  D016               	goto	l1115
   931                           
   932                           ; BSR set to: 0
   933  001236  0E59               	movlw	89
   934  001238  0100               	movlb	0	; () banked
   935  00123A  19A7               	xorwf	(_tmpString+1)& (0+255),w,b
   936  00123C  A4D8               	btfss	status,2,c
   937  00123E  D011               	goto	l1115
   938                           
   939                           ; BSR set to: 0
   940  001240  0E52               	movlw	82
   941  001242  0100               	movlb	0	; () banked
   942  001244  19A8               	xorwf	(_tmpString+2)& (0+255),w,b
   943  001246  A4D8               	btfss	status,2,c
   944  001248  D00C               	goto	l1115
   945                           
   946                           ; BSR set to: 0
   947  00124A  0E49               	movlw	73
   948  00124C  0100               	movlb	0	; () banked
   949  00124E  19A9               	xorwf	(_tmpString+3)& (0+255),w,b
   950  001250  A4D8               	btfss	status,2,c
   951  001252  D007               	goto	l1115
   952                           
   953                           ; BSR set to: 0
   954  001254  0E5F               	movlw	95
   955  001256  0100               	movlb	0	; () banked
   956  001258  19AA               	xorwf	(_tmpString+4)& (0+255),w,b
   957  00125A  A4D8               	btfss	status,2,c
   958  00125C  D002               	goto	l1115
   959                           
   960                           ; BSR set to: 0
   961                           ;bufferhandler.c: 73: return 1;
   962  00125E  0E01               	movlw	1
   963                           
   964                           ; BSR set to: 0
   965  001260  0012               	return	
   966  001262                     l1115:
   967                           
   968                           ; BSR set to: 0
   969                           ;bufferhandler.c: 74: }
   970                           ;bufferhandler.c: 75: return 0;
   971  001262  0E00               	movlw	0
   972  001264  0012               	return	
   973  001266                     __end_of_isValid:
   974                           	opt stack 0
   975                           tblptru	equ	0xFF8
   976                           tblptrh	equ	0xFF7
   977                           tblptrl	equ	0xFF6
   978                           tablat	equ	0xFF5
   979                           indf0	equ	0xFEF
   980                           postinc0	equ	0xFEE
   981                           fsr0h	equ	0xFEA
   982                           fsr0l	equ	0xFE9
   983                           wreg	equ	0xFE8
   984                           status	equ	0xFD8
   985                           
   986 ;; *************** function _isItLongEnough *****************
   987 ;; Defined at:
   988 ;;		line 30 in file "bufferhandler.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;		None
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      unsigned char 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1006 ;;Total ram usage:        0 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; Hardware stack levels required when called:    3
  1009 ;; This function calls:
  1010 ;;		Nothing
  1011 ;; This function is called by:
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text7
  1017  001330                     __ptext7:
  1018                           	opt stack 0
  1019  001330                     _isItLongEnough:
  1020                           	opt stack 27
  1021                           
  1022                           ;bufferhandler.c: 32: if(index == 64){
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;incstack = 0
  1026  001330  0E40               	movlw	64
  1027  001332  1836               	xorwf	_index,w,c
  1028  001334  1037               	iorwf	_index+1,w,c
  1029  001336  A4D8               	btfss	status,2,c
  1030  001338  D002               	goto	l925
  1031                           
  1032                           ;bufferhandler.c: 33: return 1;
  1033  00133A  0E01               	movlw	1
  1034                           
  1035                           ;bufferhandler.c: 34: }else{
  1036  00133C  0012               	return	
  1037  00133E                     l925:
  1038                           
  1039                           ;bufferhandler.c: 35: return 0;
  1040  00133E  0E00               	movlw	0
  1041  001340  0012               	return	
  1042  001342                     __end_of_isItLongEnough:
  1043                           	opt stack 0
  1044                           tblptru	equ	0xFF8
  1045                           tblptrh	equ	0xFF7
  1046                           tblptrl	equ	0xFF6
  1047                           tablat	equ	0xFF5
  1048                           indf0	equ	0xFEF
  1049                           postinc0	equ	0xFEE
  1050                           fsr0h	equ	0xFEA
  1051                           fsr0l	equ	0xFE9
  1052                           wreg	equ	0xFE8
  1053                           status	equ	0xFD8
  1054                           
  1055 ;; *************** function _copyTmpBuffer *****************
  1056 ;; Defined at:
  1057 ;;		line 47 in file "bufferhandler.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  i               2   34[COMRAM] int 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1072 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1073 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1074 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1075 ;;Total ram usage:        3 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:    3
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text8
  1086  0011EC                     __ptext8:
  1087                           	opt stack 0
  1088  0011EC                     _copyTmpBuffer:
  1089                           	opt stack 27
  1090                           
  1091                           ;bufferhandler.c: 48: for(int i = 0; i<index; i++){
  1092                           
  1093                           ;incstack = 0
  1094  0011EC  0E00               	movlw	0
  1095  0011EE  6E24               	movwf	copyTmpBuffer@i+1,c
  1096  0011F0  0E00               	movlw	0
  1097  0011F2  6E23               	movwf	copyTmpBuffer@i,c
  1098  0011F4  D010               	goto	l1125
  1099  0011F6                     l1121:
  1100                           
  1101                           ;bufferhandler.c: 49: realString[i] = tmpString[i];
  1102  0011F6  0EA6               	movlw	low _tmpString
  1103  0011F8  2423               	addwf	copyTmpBuffer@i,w,c
  1104  0011FA  6ED9               	movwf	fsr2l,c
  1105  0011FC  0E00               	movlw	high _tmpString
  1106  0011FE  2024               	addwfc	copyTmpBuffer@i+1,w,c
  1107  001200  6EDA               	movwf	fsr2h,c
  1108  001202  0E60               	movlw	low _realString
  1109  001204  2423               	addwf	copyTmpBuffer@i,w,c
  1110  001206  6EE1               	movwf	fsr1l,c
  1111  001208  0E00               	movlw	high _realString
  1112  00120A  2024               	addwfc	copyTmpBuffer@i+1,w,c
  1113  00120C  6EE2               	movwf	fsr1h,c
  1114  00120E  CFDF FFE7          	movff	indf2,indf1
  1115  001212  4A23               	infsnz	copyTmpBuffer@i,f,c
  1116  001214  2A24               	incf	copyTmpBuffer@i+1,f,c
  1117  001216                     l1125:
  1118  001216  5036               	movf	_index,w,c
  1119  001218  5C23               	subwf	copyTmpBuffer@i,w,c
  1120  00121A  5024               	movf	copyTmpBuffer@i+1,w,c
  1121  00121C  0A80               	xorlw	128
  1122  00121E  6E22               	movwf	??_copyTmpBuffer& (0+255),c
  1123  001220  5037               	movf	_index+1,w,c
  1124  001222  0A80               	xorlw	128
  1125  001224  5822               	subwfb	??_copyTmpBuffer& (0+255),w,c
  1126  001226  B0D8               	btfsc	status,0,c
  1127  001228  0012               	return	
  1128  00122A  D7E5               	goto	l1121
  1129  00122C                     __end_of_copyTmpBuffer:
  1130                           	opt stack 0
  1131                           tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           tblptrl	equ	0xFF6
  1134                           tablat	equ	0xFF5
  1135                           indf0	equ	0xFEF
  1136                           postinc0	equ	0xFEE
  1137                           fsr0h	equ	0xFEA
  1138                           fsr0l	equ	0xFE9
  1139                           wreg	equ	0xFE8
  1140                           indf1	equ	0xFE7
  1141                           fsr1h	equ	0xFE2
  1142                           fsr1l	equ	0xFE1
  1143                           indf2	equ	0xFDF
  1144                           fsr2h	equ	0xFDA
  1145                           fsr2l	equ	0xFD9
  1146                           status	equ	0xFD8
  1147                           
  1148 ;; *************** function _clearBuffer *****************
  1149 ;; Defined at:
  1150 ;;		line 39 in file "bufferhandler.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  i               2   39[COMRAM] int 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1165 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1167 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1168 ;;Total ram usage:        2 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    4
  1171 ;; This function calls:
  1172 ;;		_strlen
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text9
  1179  0011A6                     __ptext9:
  1180                           	opt stack 0
  1181  0011A6                     _clearBuffer:
  1182                           	opt stack 26
  1183                           
  1184                           ;bufferhandler.c: 40: for(int i = 0; i<strlen(tmpString); i++){
  1185                           
  1186                           ;incstack = 0
  1187  0011A6  0E00               	movlw	0
  1188  0011A8  6E29               	movwf	clearBuffer@i+1,c
  1189  0011AA  0E00               	movlw	0
  1190  0011AC  6E28               	movwf	clearBuffer@i,c
  1191  0011AE  D00A               	goto	l1097
  1192  0011B0                     l1093:
  1193                           
  1194                           ;bufferhandler.c: 41: tmpString[i] = "";
  1195  0011B0  0EA6               	movlw	low _tmpString
  1196  0011B2  2428               	addwf	clearBuffer@i,w,c
  1197  0011B4  6ED9               	movwf	fsr2l,c
  1198  0011B6  0E00               	movlw	high _tmpString
  1199  0011B8  2029               	addwfc	clearBuffer@i+1,w,c
  1200  0011BA  6EDA               	movwf	fsr2h,c
  1201  0011BC  0E05               	movlw	low (STR_1+4)
  1202  0011BE  6EDF               	movwf	indf2,c
  1203  0011C0  4A28               	infsnz	clearBuffer@i,f,c
  1204  0011C2  2A29               	incf	clearBuffer@i+1,f,c
  1205  0011C4                     l1097:
  1206  0011C4  0EA6               	movlw	low _tmpString
  1207  0011C6  6E22               	movwf	strlen@s,c
  1208  0011C8  0E00               	movlw	high _tmpString
  1209  0011CA  6E23               	movwf	strlen@s+1,c
  1210  0011CC  ECA9  F008         	call	_strlen	;wreg free
  1211  0011D0  5022               	movf	?_strlen,w,c
  1212  0011D2  5C28               	subwf	clearBuffer@i,w,c
  1213  0011D4  5023               	movf	?_strlen+1,w,c
  1214  0011D6  5829               	subwfb	clearBuffer@i+1,w,c
  1215  0011D8  A0D8               	btfss	status,0,c
  1216  0011DA  D7EA               	goto	l1093
  1217                           
  1218                           ;bufferhandler.c: 42: }
  1219                           ;bufferhandler.c: 43: tmpString[0] = '\0';
  1220  0011DC  0E00               	movlw	0
  1221  0011DE  0100               	movlb	0	; () banked
  1222  0011E0  6FA6               	movwf	_tmpString& (0+255),b
  1223                           
  1224                           ;bufferhandler.c: 44: index = 0;
  1225  0011E2  0E00               	movlw	0
  1226  0011E4  6E37               	movwf	_index+1,c
  1227  0011E6  0E00               	movlw	0
  1228  0011E8  6E36               	movwf	_index,c
  1229                           
  1230                           ; BSR set to: 0
  1231  0011EA  0012               	return		;funcret
  1232  0011EC                     __end_of_clearBuffer:
  1233                           	opt stack 0
  1234                           tblptru	equ	0xFF8
  1235                           tblptrh	equ	0xFF7
  1236                           tblptrl	equ	0xFF6
  1237                           tablat	equ	0xFF5
  1238                           indf0	equ	0xFEF
  1239                           postinc0	equ	0xFEE
  1240                           fsr0h	equ	0xFEA
  1241                           fsr0l	equ	0xFE9
  1242                           wreg	equ	0xFE8
  1243                           indf1	equ	0xFE7
  1244                           fsr1h	equ	0xFE2
  1245                           fsr1l	equ	0xFE1
  1246                           indf2	equ	0xFDF
  1247                           fsr2h	equ	0xFDA
  1248                           fsr2l	equ	0xFD9
  1249                           status	equ	0xFD8
  1250                           
  1251 ;; *************** function _strlen *****************
  1252 ;; Defined at:
  1253 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  s               2   33[COMRAM] PTR const unsigned char 
  1256 ;;		 -> realString(70), tmpString(70), STR_2(4), STR_1(5), 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  cp              2   37[COMRAM] PTR const unsigned char 
  1259 ;;		 -> realString(70), tmpString(70), STR_2(4), STR_1(5), 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  2   33[COMRAM] unsigned int 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1270 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1271 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1272 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1273 ;;Total ram usage:        6 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    3
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_writeString
  1280 ;;		_clearBuffer
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text10
  1285  001152                     __ptext10:
  1286                           	opt stack 0
  1287  001152                     _strlen:
  1288                           	opt stack 26
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;incstack = 0
  1292  001152  C022  F026         	movff	strlen@s,strlen@cp
  1293  001156  C023  F027         	movff	strlen@s+1,strlen@cp+1
  1294  00115A  D002               	goto	l1039
  1295  00115C                     l1037:
  1296  00115C  4A26               	infsnz	strlen@cp,f,c
  1297  00115E  2A27               	incf	strlen@cp+1,f,c
  1298  001160                     l1039:
  1299  001160  C026  FFF6         	movff	strlen@cp,tblptrl
  1300  001164  C027  FFF7         	movff	strlen@cp+1,tblptrh
  1301  001168  0E00               	movlw	low (__smallconst shr (0+16))
  1302  00116A  6EF8               	movwf	tblptru,c
  1303  00116C  0E0E               	movlw	(high __ramtop+-1)
  1304  00116E  64F7               	cpfsgt	tblptrh,c
  1305  001170  D003               	bra	u327
  1306  001172  0008               	tblrd		*
  1307  001174  50F5               	movf	tablat,w,c
  1308  001176  D005               	bra	u320
  1309  001178                     u327:
  1310  001178  CFF6 FFE9          	movff	tblptrl,fsr0l
  1311  00117C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1312  001180  50EF               	movf	indf0,w,c
  1313  001182                     u320:
  1314  001182  0900               	iorlw	0
  1315  001184  A4D8               	btfss	status,2,c
  1316  001186  D7EA               	goto	l1037
  1317  001188  C022  F024         	movff	strlen@s,??_strlen
  1318  00118C  C023  F025         	movff	strlen@s+1,??_strlen+1
  1319  001190  1E24               	comf	??_strlen,f,c
  1320  001192  1E25               	comf	??_strlen+1,f,c
  1321  001194  4A24               	infsnz	??_strlen,f,c
  1322  001196  2A25               	incf	??_strlen+1,f,c
  1323  001198  5026               	movf	strlen@cp,w,c
  1324  00119A  2424               	addwf	??_strlen,w,c
  1325  00119C  6E22               	movwf	?_strlen,c
  1326  00119E  5027               	movf	strlen@cp+1,w,c
  1327  0011A0  2025               	addwfc	??_strlen+1,w,c
  1328  0011A2  6E23               	movwf	?_strlen+1,c
  1329  0011A4  0012               	return	
  1330  0011A6                     __end_of_strlen:
  1331                           	opt stack 0
  1332                           tblptru	equ	0xFF8
  1333                           tblptrh	equ	0xFF7
  1334                           tblptrl	equ	0xFF6
  1335                           tablat	equ	0xFF5
  1336                           indf0	equ	0xFEF
  1337                           postinc0	equ	0xFEE
  1338                           fsr0h	equ	0xFEA
  1339                           fsr0l	equ	0xFE9
  1340                           wreg	equ	0xFE8
  1341                           indf1	equ	0xFE7
  1342                           fsr1h	equ	0xFE2
  1343                           fsr1l	equ	0xFE1
  1344                           indf2	equ	0xFDF
  1345                           fsr2h	equ	0xFDA
  1346                           fsr2l	equ	0xFD9
  1347                           status	equ	0xFD8
  1348                           
  1349 ;; *************** function _UART_Init *****************
  1350 ;; Defined at:
  1351 ;;		line 31 in file "uart.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  baudrate        4   33[COMRAM] const long 
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;		None
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      unsigned char 
  1358 ;; Registers used:
  1359 ;;		wreg, status,2
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1368 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;Total ram usage:        4 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:    3
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_main
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text11
  1380  001266                     __ptext11:
  1381                           	opt stack 0
  1382  001266                     _UART_Init:
  1383                           	opt stack 27
  1384                           
  1385                           ;uart.c: 35: TXSTA1 = 0x24;
  1386                           
  1387                           ;incstack = 0
  1388  001266  0E24               	movlw	36
  1389  001268  6EAD               	movwf	4013,c	;volatile
  1390                           
  1391                           ;uart.c: 36: RCSTA1 = 0x90;
  1392  00126A  0E90               	movlw	144
  1393  00126C  6EAC               	movwf	4012,c	;volatile
  1394                           
  1395                           ;uart.c: 37: RC1IE = 1;
  1396  00126E  8A9D               	bsf	3997,5,c	;volatile
  1397                           
  1398                           ;uart.c: 38: BAUDCON1bits.BRG16 = 0;
  1399  001270  967E               	bcf	3966,3,c	;volatile
  1400                           
  1401                           ;uart.c: 39: SPBRG1 = 155;
  1402  001272  0E9B               	movlw	155
  1403  001274  6EB0               	movwf	4016,c	;volatile
  1404                           
  1405                           ;uart.c: 40: SPBRGH1 = 155;
  1406  001276  0E9B               	movlw	155
  1407  001278  6E7F               	movwf	3967,c	;volatile
  1408                           
  1409                           ;uart.c: 41: TRISC7 = 1;
  1410  00127A  8E94               	bsf	3988,7,c	;volatile
  1411                           
  1412                           ;uart.c: 42: TRISC6 = 0;
  1413  00127C  9C94               	bcf	3988,6,c	;volatile
  1414                           
  1415                           ;uart.c: 46: RCSTA2 = 0b10010000;
  1416  00127E  0E90               	movlw	144
  1417  001280  6E9C               	movwf	3996,c	;volatile
  1418                           
  1419                           ;uart.c: 47: TXSTA2 = 0b00100100;
  1420  001282  0E24               	movlw	36
  1421  001284  6EA8               	movwf	4008,c	;volatile
  1422                           
  1423                           ;uart.c: 48: RC2IE = 1;
  1424  001286  8AA3               	bsf	4003,5,c	;volatile
  1425                           
  1426                           ;uart.c: 49: BAUDCON2bits.BRG16 = 0;
  1427  001288  967C               	bcf	3964,3,c	;volatile
  1428                           
  1429                           ;uart.c: 50: SPBRG2 = 25;
  1430  00128A  0E19               	movlw	25
  1431  00128C  6EAB               	movwf	4011,c	;volatile
  1432                           
  1433                           ;uart.c: 51: SPBRGH2 = 25;
  1434  00128E  0E19               	movlw	25
  1435  001290  6E7D               	movwf	3965,c	;volatile
  1436                           
  1437                           ;uart.c: 52: TRISB4 = 1;
  1438  001292  8893               	bsf	3987,4,c	;volatile
  1439                           
  1440                           ;uart.c: 53: TRISB5 = 0;
  1441  001294  9A93               	bcf	3987,5,c	;volatile
  1442  001296  0012               	return	
  1443  001298                     __end_of_UART_Init:
  1444                           	opt stack 0
  1445                           tblptru	equ	0xFF8
  1446                           tblptrh	equ	0xFF7
  1447                           tblptrl	equ	0xFF6
  1448                           tablat	equ	0xFF5
  1449                           indf0	equ	0xFEF
  1450                           postinc0	equ	0xFEE
  1451                           fsr0h	equ	0xFEA
  1452                           fsr0l	equ	0xFE9
  1453                           wreg	equ	0xFE8
  1454                           indf1	equ	0xFE7
  1455                           fsr1h	equ	0xFE2
  1456                           fsr1l	equ	0xFE1
  1457                           indf2	equ	0xFDF
  1458                           fsr2h	equ	0xFDA
  1459                           fsr2l	equ	0xFD9
  1460                           status	equ	0xFD8
  1461                           
  1462 ;; *************** function _InitApp *****************
  1463 ;; Defined at:
  1464 ;;		line 29 in file "user.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;		None
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;		None
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  1    wreg      void 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1482 ;;Total ram usage:        0 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:    3
  1485 ;; This function calls:
  1486 ;;		Nothing
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text12
  1493  0012DE                     __ptext12:
  1494                           	opt stack 0
  1495  0012DE                     _InitApp:
  1496                           	opt stack 27
  1497                           
  1498                           ;user.c: 33: PPSCON = 0b00000000;
  1499                           
  1500                           ;incstack = 0
  1501  0012DE  0E00               	movlw	0
  1502  0012E0  010E               	movlb	14	; () banked
  1503  0012E2  6FBF               	movwf	191,b	;volatile
  1504                           
  1505                           ;user.c: 34: RPOR8 = 0b00000110;
  1506  0012E4  0E06               	movlw	6
  1507  0012E6  010E               	movlb	14	; () banked
  1508  0012E8  6FC8               	movwf	200,b	;volatile
  1509                           
  1510                           ;user.c: 35: RPINR16 = 0b00000111;
  1511  0012EA  0E07               	movlw	7
  1512  0012EC  010E               	movlb	14	; () banked
  1513  0012EE  6FF7               	movwf	247,b	;volatile
  1514                           
  1515                           ;user.c: 36: PPSCON = 0b00000001;
  1516  0012F0  0E01               	movlw	1
  1517  0012F2  010E               	movlb	14	; () banked
  1518  0012F4  6FBF               	movwf	191,b	;volatile
  1519                           
  1520                           ;user.c: 39: INTCON = 0xC0;
  1521  0012F6  0EC0               	movlw	192
  1522  0012F8  6EF2               	movwf	intcon,c	;volatile
  1523                           
  1524                           ; BSR set to: 14
  1525  0012FA  0012               	return		;funcret
  1526  0012FC                     __end_of_InitApp:
  1527                           	opt stack 0
  1528                           tblptru	equ	0xFF8
  1529                           tblptrh	equ	0xFF7
  1530                           tblptrl	equ	0xFF6
  1531                           tablat	equ	0xFF5
  1532                           intcon	equ	0xFF2
  1533                           indf0	equ	0xFEF
  1534                           postinc0	equ	0xFEE
  1535                           fsr0h	equ	0xFEA
  1536                           fsr0l	equ	0xFE9
  1537                           wreg	equ	0xFE8
  1538                           indf1	equ	0xFE7
  1539                           fsr1h	equ	0xFE2
  1540                           fsr1l	equ	0xFE1
  1541                           indf2	equ	0xFDF
  1542                           fsr2h	equ	0xFDA
  1543                           fsr2l	equ	0xFD9
  1544                           status	equ	0xFD8
  1545                           
  1546 ;; *************** function _ConfigureOscillator *****************
  1547 ;; Defined at:
  1548 ;;		line 24 in file "system.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1566 ;;Total ram usage:        0 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    3
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text13
  1577  001342                     __ptext13:
  1578                           	opt stack 0
  1579  001342                     _ConfigureOscillator:
  1580                           	opt stack 27
  1581                           
  1582                           ;system.c: 26: OSCCONbits.IRCF = 0b110;
  1583                           
  1584                           ; BSR set to: 14
  1585                           ;incstack = 0
  1586  001342  50D3               	movf	4051,w,c	;volatile
  1587  001344  0B8F               	andlw	-113
  1588  001346  0960               	iorlw	96
  1589  001348  6ED3               	movwf	4051,c	;volatile
  1590                           
  1591                           ;system.c: 27: OSCTUNEbits.PLLEN = 0b1;
  1592  00134A  8C9B               	bsf	3995,6,c	;volatile
  1593  00134C  0012               	return		;funcret
  1594  00134E                     __end_of_ConfigureOscillator:
  1595                           	opt stack 0
  1596                           tblptru	equ	0xFF8
  1597                           tblptrh	equ	0xFF7
  1598                           tblptrl	equ	0xFF6
  1599                           tablat	equ	0xFF5
  1600                           intcon	equ	0xFF2
  1601                           indf0	equ	0xFEF
  1602                           postinc0	equ	0xFEE
  1603                           fsr0h	equ	0xFEA
  1604                           fsr0l	equ	0xFE9
  1605                           wreg	equ	0xFE8
  1606                           indf1	equ	0xFE7
  1607                           fsr1h	equ	0xFE2
  1608                           fsr1l	equ	0xFE1
  1609                           indf2	equ	0xFDF
  1610                           fsr2h	equ	0xFDA
  1611                           fsr2l	equ	0xFD9
  1612                           status	equ	0xFD8
  1613                           
  1614 ;; *************** function _low_isr *****************
  1615 ;; Defined at:
  1616 ;;		line 66 in file "interrupts.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		None
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1632 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1633 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1634 ;;Total ram usage:       17 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    2
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		Interrupt level 1
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	intcodelo
  1645  000018                     __pintcodelo:
  1646                           	opt stack 0
  1647  000018                     _low_isr:
  1648                           	opt stack 25
  1649                           
  1650                           ;incstack = 0
  1651  000018  8038               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1652  00001A  CFD8 F011          	movff	status,??_low_isr
  1653  00001E  CFE8 F012          	movff	wreg,??_low_isr+1
  1654  000022  CFE0 F013          	movff	bsr,??_low_isr+2
  1655  000026  CFFA F014          	movff	pclath,??_low_isr+3
  1656  00002A  CFFB F015          	movff	pclatu,??_low_isr+4
  1657  00002E  CFE9 F016          	movff	fsr0l,??_low_isr+5
  1658  000032  CFEA F017          	movff	fsr0h,??_low_isr+6
  1659  000036  CFE1 F018          	movff	fsr1l,??_low_isr+7
  1660  00003A  CFE2 F019          	movff	fsr1h,??_low_isr+8
  1661  00003E  CFD9 F01A          	movff	fsr2l,??_low_isr+9
  1662  000042  CFDA F01B          	movff	fsr2h,??_low_isr+10
  1663  000046  CFF3 F01C          	movff	prodl,??_low_isr+11
  1664  00004A  CFF4 F01D          	movff	prodh,??_low_isr+12
  1665  00004E  CFF6 F01E          	movff	tblptrl,??_low_isr+13
  1666  000052  CFF7 F01F          	movff	tblptrh,??_low_isr+14
  1667  000056  CFF8 F020          	movff	tblptru,??_low_isr+15
  1668  00005A  CFF5 F021          	movff	tablat,??_low_isr+16
  1669  00005E  C021  FFF5         	movff	??_low_isr+16,tablat
  1670  000062  C020  FFF8         	movff	??_low_isr+15,tblptru
  1671  000066  C01F  FFF7         	movff	??_low_isr+14,tblptrh
  1672  00006A  C01E  FFF6         	movff	??_low_isr+13,tblptrl
  1673  00006E  C01D  FFF4         	movff	??_low_isr+12,prodh
  1674  000072  C01C  FFF3         	movff	??_low_isr+11,prodl
  1675  000076  C01B  FFDA         	movff	??_low_isr+10,fsr2h
  1676  00007A  C01A  FFD9         	movff	??_low_isr+9,fsr2l
  1677  00007E  C019  FFE2         	movff	??_low_isr+8,fsr1h
  1678  000082  C018  FFE1         	movff	??_low_isr+7,fsr1l
  1679  000086  C017  FFEA         	movff	??_low_isr+6,fsr0h
  1680  00008A  C016  FFE9         	movff	??_low_isr+5,fsr0l
  1681  00008E  C015  FFFB         	movff	??_low_isr+4,pclatu
  1682  000092  C014  FFFA         	movff	??_low_isr+3,pclath
  1683  000096  C013  FFE0         	movff	??_low_isr+2,bsr
  1684  00009A  C012  FFE8         	movff	??_low_isr+1,wreg
  1685  00009E  C011  FFD8         	movff	??_low_isr,status
  1686  0000A2  9038               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1687  0000A4  0010               	retfie	
  1688  0000A6                     __end_of_low_isr:
  1689                           	opt stack 0
  1690                           pclatu	equ	0xFFB
  1691                           pclath	equ	0xFFA
  1692                           tblptru	equ	0xFF8
  1693                           tblptrh	equ	0xFF7
  1694                           tblptrl	equ	0xFF6
  1695                           tablat	equ	0xFF5
  1696                           prodh	equ	0xFF4
  1697                           prodl	equ	0xFF3
  1698                           intcon	equ	0xFF2
  1699                           indf0	equ	0xFEF
  1700                           postinc0	equ	0xFEE
  1701                           fsr0h	equ	0xFEA
  1702                           fsr0l	equ	0xFE9
  1703                           wreg	equ	0xFE8
  1704                           indf1	equ	0xFE7
  1705                           fsr1h	equ	0xFE2
  1706                           fsr1l	equ	0xFE1
  1707                           bsr	equ	0xFE0
  1708                           indf2	equ	0xFDF
  1709                           fsr2h	equ	0xFDA
  1710                           fsr2l	equ	0xFD9
  1711                           status	equ	0xFD8
  1712                           
  1713 ;; *************** function _high_isr *****************
  1714 ;; Defined at:
  1715 ;;		line 30 in file "interrupts.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1731 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1732 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1733 ;;Total ram usage:       15 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    1
  1736 ;; This function calls:
  1737 ;;		_appendChar
  1738 ;; This function is called by:
  1739 ;;		Interrupt level 2
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	intcode
  1744  000008                     __pintcode:
  1745                           	opt stack 0
  1746  000008                     _high_isr:
  1747                           	opt stack 25
  1748                           
  1749                           ;incstack = 0
  1750  000008  8238               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1751  00000A  EFD7  F007         	goto	int_func
  1752                           pclatu	equ	0xFFB
  1753                           pclath	equ	0xFFA
  1754                           tblptru	equ	0xFF8
  1755                           tblptrh	equ	0xFF7
  1756                           tblptrl	equ	0xFF6
  1757                           tablat	equ	0xFF5
  1758                           prodh	equ	0xFF4
  1759                           prodl	equ	0xFF3
  1760                           intcon	equ	0xFF2
  1761                           indf0	equ	0xFEF
  1762                           postinc0	equ	0xFEE
  1763                           fsr0h	equ	0xFEA
  1764                           fsr0l	equ	0xFE9
  1765                           wreg	equ	0xFE8
  1766                           indf1	equ	0xFE7
  1767                           fsr1h	equ	0xFE2
  1768                           fsr1l	equ	0xFE1
  1769                           bsr	equ	0xFE0
  1770                           indf2	equ	0xFDF
  1771                           fsr2h	equ	0xFDA
  1772                           fsr2l	equ	0xFD9
  1773                           status	equ	0xFD8
  1774                           
  1775                           	psect	intcode_body
  1776  000FAE                     __pintcode_body:
  1777                           	opt stack 25
  1778  000FAE                     int_func:
  1779                           	opt stack 25
  1780  000FAE  CFFA F003          	movff	pclath,??_high_isr+1
  1781  000FB2  CFFB F004          	movff	pclatu,??_high_isr+2
  1782  000FB6  CFE9 F005          	movff	fsr0l,??_high_isr+3
  1783  000FBA  CFEA F006          	movff	fsr0h,??_high_isr+4
  1784  000FBE  CFE1 F007          	movff	fsr1l,??_high_isr+5
  1785  000FC2  CFE2 F008          	movff	fsr1h,??_high_isr+6
  1786  000FC6  CFD9 F009          	movff	fsr2l,??_high_isr+7
  1787  000FCA  CFDA F00A          	movff	fsr2h,??_high_isr+8
  1788  000FCE  CFF3 F00B          	movff	prodl,??_high_isr+9
  1789  000FD2  CFF4 F00C          	movff	prodh,??_high_isr+10
  1790  000FD6  CFF6 F00D          	movff	tblptrl,??_high_isr+11
  1791  000FDA  CFF7 F00E          	movff	tblptrh,??_high_isr+12
  1792  000FDE  CFF8 F00F          	movff	tblptru,??_high_isr+13
  1793  000FE2  CFF5 F010          	movff	tablat,??_high_isr+14
  1794                           
  1795                           ;interrupts.c: 45: if(RC1IF){
  1796  000FE6  AA9E               	btfss	3998,5,c	;volatile
  1797  000FE8  D00F               	goto	i2l1139
  1798                           
  1799                           ;interrupts.c: 46: LATAbits.LATA0 = !LATAbits.LATA0;
  1800  000FEA  B089               	btfsc	3977,0,c	;volatile
  1801  000FEC  D003               	goto	i2u47_40
  1802  000FEE  6A02               	clrf	??_high_isr& (0+255),c
  1803  000FF0  2A02               	incf	??_high_isr& (0+255),f,c
  1804  000FF2  D001               	goto	i2u48_48
  1805  000FF4                     i2u47_40:
  1806  000FF4  6A02               	clrf	??_high_isr& (0+255),c
  1807  000FF6                     i2u48_48:
  1808  000FF6  5089               	movf	3977,w,c	;volatile
  1809  000FF8  1802               	xorwf	??_high_isr,w,c
  1810  000FFA  0BFE               	andlw	-2
  1811  000FFC  1802               	xorwf	??_high_isr,w,c
  1812  000FFE  6E89               	movwf	3977,c	;volatile
  1813                           
  1814                           ;interrupts.c: 47: appendChar(RCREG1);
  1815  001000  50AF               	movf	4015,w,c	;volatile
  1816  001002  EC8C  F009         	call	_appendChar
  1817                           
  1818                           ;interrupts.c: 49: RC1IF = 0;
  1819  001006  9A9E               	bcf	3998,5,c	;volatile
  1820  001008                     i2l1139:
  1821                           
  1822                           ;interrupts.c: 50: }
  1823                           ;interrupts.c: 52: if(RC2IF){
  1824  001008  BAA4               	btfsc	4004,5,c	;volatile
  1825                           
  1826                           ;interrupts.c: 57: RC2IF = 0;
  1827  00100A  9AA4               	bcf	4004,5,c	;volatile
  1828  00100C  C010  FFF5         	movff	??_high_isr+14,tablat
  1829  001010  C00F  FFF8         	movff	??_high_isr+13,tblptru
  1830  001014  C00E  FFF7         	movff	??_high_isr+12,tblptrh
  1831  001018  C00D  FFF6         	movff	??_high_isr+11,tblptrl
  1832  00101C  C00C  FFF4         	movff	??_high_isr+10,prodh
  1833  001020  C00B  FFF3         	movff	??_high_isr+9,prodl
  1834  001024  C00A  FFDA         	movff	??_high_isr+8,fsr2h
  1835  001028  C009  FFD9         	movff	??_high_isr+7,fsr2l
  1836  00102C  C008  FFE2         	movff	??_high_isr+6,fsr1h
  1837  001030  C007  FFE1         	movff	??_high_isr+5,fsr1l
  1838  001034  C006  FFEA         	movff	??_high_isr+4,fsr0h
  1839  001038  C005  FFE9         	movff	??_high_isr+3,fsr0l
  1840  00103C  C004  FFFB         	movff	??_high_isr+2,pclatu
  1841  001040  C003  FFFA         	movff	??_high_isr+1,pclath
  1842  001044  9238               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1843  001046  0011               	retfie		f
  1844  001048                     __end_of_high_isr:
  1845                           	opt stack 0
  1846                           pclatu	equ	0xFFB
  1847                           pclath	equ	0xFFA
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           prodh	equ	0xFF4
  1853                           prodl	equ	0xFF3
  1854                           intcon	equ	0xFF2
  1855                           indf0	equ	0xFEF
  1856                           postinc0	equ	0xFEE
  1857                           fsr0h	equ	0xFEA
  1858                           fsr0l	equ	0xFE9
  1859                           wreg	equ	0xFE8
  1860                           indf1	equ	0xFE7
  1861                           fsr1h	equ	0xFE2
  1862                           fsr1l	equ	0xFE1
  1863                           bsr	equ	0xFE0
  1864                           indf2	equ	0xFDF
  1865                           fsr2h	equ	0xFDA
  1866                           fsr2l	equ	0xFD9
  1867                           status	equ	0xFD8
  1868                           
  1869 ;; *************** function _appendChar *****************
  1870 ;; Defined at:
  1871 ;;		line 24 in file "bufferhandler.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  data            1    wreg     unsigned char 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  data            1    0[COMRAM] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1889 ;;Total ram usage:        1 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_high_isr
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text16
  1899  001318                     __ptext16:
  1900                           	opt stack 0
  1901  001318                     _appendChar:
  1902                           	opt stack 25
  1903                           
  1904                           ;incstack = 0
  1905                           ;appendChar@data stored from wreg
  1906  001318  6E01               	movwf	appendChar@data,c
  1907                           
  1908                           ;bufferhandler.c: 25: tmpString[index] = data;
  1909  00131A  0EA6               	movlw	low _tmpString
  1910  00131C  2436               	addwf	_index,w,c
  1911  00131E  6ED9               	movwf	fsr2l,c
  1912  001320  0E00               	movlw	high _tmpString
  1913  001322  2037               	addwfc	_index+1,w,c
  1914  001324  6EDA               	movwf	fsr2h,c
  1915  001326  C001  FFDF         	movff	appendChar@data,indf2
  1916                           
  1917                           ;bufferhandler.c: 26: index++;
  1918  00132A  4A36               	infsnz	_index,f,c
  1919  00132C  2A37               	incf	_index+1,f,c
  1920  00132E  0012               	return		;funcret
  1921  001330                     __end_of_appendChar:
  1922                           	opt stack 0
  1923                           pclatu	equ	0xFFB
  1924                           pclath	equ	0xFFA
  1925                           tblptru	equ	0xFF8
  1926                           tblptrh	equ	0xFF7
  1927                           tblptrl	equ	0xFF6
  1928                           tablat	equ	0xFF5
  1929                           prodh	equ	0xFF4
  1930                           prodl	equ	0xFF3
  1931                           intcon	equ	0xFF2
  1932                           indf0	equ	0xFEF
  1933                           postinc0	equ	0xFEE
  1934                           fsr0h	equ	0xFEA
  1935                           fsr0l	equ	0xFE9
  1936                           wreg	equ	0xFE8
  1937                           indf1	equ	0xFE7
  1938                           fsr1h	equ	0xFE2
  1939                           fsr1l	equ	0xFE1
  1940                           bsr	equ	0xFE0
  1941                           indf2	equ	0xFDF
  1942                           fsr2h	equ	0xFDA
  1943                           fsr2l	equ	0xFD9
  1944                           status	equ	0xFD8
  1945                           pclatu	equ	0xFFB
  1946                           pclath	equ	0xFFA
  1947                           tblptru	equ	0xFF8
  1948                           tblptrh	equ	0xFF7
  1949                           tblptrl	equ	0xFF6
  1950                           tablat	equ	0xFF5
  1951                           prodh	equ	0xFF4
  1952                           prodl	equ	0xFF3
  1953                           intcon	equ	0xFF2
  1954                           indf0	equ	0xFEF
  1955                           postinc0	equ	0xFEE
  1956                           fsr0h	equ	0xFEA
  1957                           fsr0l	equ	0xFE9
  1958                           wreg	equ	0xFE8
  1959                           indf1	equ	0xFE7
  1960                           fsr1h	equ	0xFE2
  1961                           fsr1l	equ	0xFE1
  1962                           bsr	equ	0xFE0
  1963                           indf2	equ	0xFDF
  1964                           fsr2h	equ	0xFDA
  1965                           fsr2l	equ	0xFD9
  1966                           status	equ	0xFD8
  1967                           
  1968                           	psect	rparam
  1969  0000                     pclatu	equ	0xFFB
  1970                           pclath	equ	0xFFA
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           prodh	equ	0xFF4
  1976                           prodl	equ	0xFF3
  1977                           intcon	equ	0xFF2
  1978                           indf0	equ	0xFEF
  1979                           postinc0	equ	0xFEE
  1980                           fsr0h	equ	0xFEA
  1981                           fsr0l	equ	0xFE9
  1982                           wreg	equ	0xFE8
  1983                           indf1	equ	0xFE7
  1984                           fsr1h	equ	0xFE2
  1985                           fsr1l	equ	0xFE1
  1986                           bsr	equ	0xFE0
  1987                           indf2	equ	0xFDF
  1988                           fsr2h	equ	0xFDA
  1989                           fsr2l	equ	0xFD9
  1990                           status	equ	0xFD8
  1991                           
  1992                           	psect	temp
  1993  000038                     btemp:
  1994                           	opt stack 0
  1995  000038                     	ds	1
  1996  0000                     int$flags	set	btemp
  1997                           pclatu	equ	0xFFB
  1998                           pclath	equ	0xFFA
  1999                           tblptru	equ	0xFF8
  2000                           tblptrh	equ	0xFF7
  2001                           tblptrl	equ	0xFF6
  2002                           tablat	equ	0xFF5
  2003                           prodh	equ	0xFF4
  2004                           prodl	equ	0xFF3
  2005                           intcon	equ	0xFF2
  2006                           indf0	equ	0xFEF
  2007                           postinc0	equ	0xFEE
  2008                           fsr0h	equ	0xFEA
  2009                           fsr0l	equ	0xFE9
  2010                           wreg	equ	0xFE8
  2011                           indf1	equ	0xFE7
  2012                           fsr1h	equ	0xFE2
  2013                           fsr1l	equ	0xFE1
  2014                           bsr	equ	0xFE0
  2015                           indf2	equ	0xFDF
  2016                           fsr2h	equ	0xFDA
  2017                           fsr2l	equ	0xFD9
  2018                           status	equ	0xFD8


Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         146
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      55
    BANK0           160      0     140
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 70
		 -> realString(BANK0[70]), tmpString(BANK0[70]), STR_2(CODE[4]), STR_1(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 70
		 -> realString(BANK0[70]), tmpString(BANK0[70]), STR_2(CODE[4]), STR_1(CODE[5]), 

    writeString@str	PTR unsigned char  size(2) Largest target is 70
		 -> realString(BANK0[70]), STR_2(CODE[4]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_writeResult
    _writeResult->_wait_ms
    _writeString->_strlen
    _wait_ms->___lmul
    _clearBuffer->_strlen

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_appendChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3565
                                             48 COMRAM     1     1      0
                _ConfigureOscillator
                            _InitApp
                          _UART_Init
                         _UART_Write
                        _clearBuffer
                      _copyTmpBuffer
                     _isItLongEnough
                            _isValid
                            _wait_ms
                        _writeResult
                        _writeString
 ---------------------------------------------------------------------------------
 (1) _writeResult                                          1     1      0    1466
                                             47 COMRAM     1     1      0
                            _wait_ms
                        _writeString
 ---------------------------------------------------------------------------------
 (1) _writeString                                          7     4      3     972
                                             39 COMRAM     7     4      3
                         _UART_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           2     1      1     258
                                             33 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _wait_ms                                              2     0      2     472
                                             45 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     322
                                             33 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _isValid                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _isItLongEnough                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _copyTmpBuffer                                        3     3      0      68
                                             33 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _clearBuffer                                          2     2      0     264
                                             39 COMRAM     2     2      0
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     218
                                             33 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4      64
                                             33 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                             17    17      0       0
                                             16 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            15    15      0      22
                                              1 COMRAM    15    15      0
                         _appendChar
 ---------------------------------------------------------------------------------
 (6) _appendChar                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _UART_Init
   _UART_Write
   _clearBuffer
     _strlen
   _copyTmpBuffer
   _isItLongEnough
   _isValid
   _wait_ms
     ___lmul
   _writeResult
     _wait_ms
       ___lmul
     _writeString
       _UART_Write
       _strlen
   _writeString
     _UART_Write
     _strlen

 _low_isr (ROOT)

 _high_isr (ROOT)
   _appendChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      8C       5       87.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      37       1       58.5%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C3       6        0.0%
DATA                 0      0      C3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Apr 02 14:17:14 2017

                          l52 0FA0                            l71 10EE                            l55 0FA2  
              writeResult@dev 0030                            bsr 000FE0                  __CFG_CP0$OFF 000000  
                         l144 1304                           l148 130E                           l925 133E  
                         u320 1182                           u327 1178                           u360 1084  
                         u367 107A                           wreg 000FE8                    _TXSTA1bits 000FAD  
                __CFG_IESO$ON 000000                    _TXSTA2bits 000FA8                          l1121 11F6  
                        l1115 1262                          l1051 1120                          l1037 115C  
                        l1125 1216                          l1061 108C                          l1039 1160  
                        l1047 110C                          l1065 10DE                          l1057 1052  
                        l1093 11B0                          l1167 0F6E                          l1097 11C4  
                        l1179 0F9A            __CFG_WPFP$PAGE_127 000000                 _copyTmpBuffer 11EC  
                        STR_1 0F01                          STR_2 0F06                          STR_3 0F05  
                        _RCIF 007CF5                 __CFG_FCMEN$ON 000000                          _main 0F0C  
                        fsr0h 000FEA                          fsr1h 000FE2                          indf0 000FEF  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0038                          prodh 000FF4                          prodl 000FF3  
                        start 00A6                writeString@dev 002A                  ___param_bank 000000  
              writeString@str 0028               __end_of_InitApp 12FC                 __CFG_PLLDIV$1 000000  
                _BAUDCON1bits 000F7E                  _BAUDCON2bits 000F7C                         ?_main 0001  
                       _RC1IE 007CED                         _RC1IF 007CF5                         _RC2IE 007D1D  
                       _RC2IF 007D25                   _writeResult 12BE                         _RPOR8 000EC8  
         _ConfigureOscillator 1342                   _writeString 1048           ___lmul@multiplicand 0026  
            ??_isItLongEnough 0022                   ?_UART_Write 0022            __size_of_UART_Init 0032  
             __end_of_isValid 1266                         _index 0036                ?_copyTmpBuffer 0001  
              __CFG_CLKOEC$ON 000000               __end_of_low_isr 00A6                         pclath 000FFA  
                       tablat 000FF5               __end_of_wait_ms 10FC                         status 000FD8  
        ?_ConfigureOscillator 0001          __size_of_clearBuffer 0046       __CFG_DSWDTOSC$INTOSCREF 000000  
             __initialization 1298                  __end_of_main 0FAE                        ??_main 0031  
               __activetblptr 000002                        i2l1139 1008                __CFG_WDTEN$OFF 000000  
                      _INTCON 000FF2                        _RCREG1 000FAF                        _RCREG2 000FAA  
                      _RCSTA1 000FAC                        _RCSTA2 000F9C                        _SPBRG1 000FB0  
                      _SPBRG2 000FAB                        _PPSCON 000EBF                        _TRISB4 007C9C  
                      _TRISB5 007C9D                __CFG_WPCFG$OFF 000000                        _TRISC6 007CA6  
                      _TRISC7 007CA7                        _TXREG1 000FAE                        _TXREG2 000FA9  
                      _TXSTA1 000FAD                        _TXSTA2 000FA8                     ??_InitApp 0022  
       ??_ConfigureOscillator 0022                __CFG_WPDIS$OFF 000000                __CFG_XINST$OFF 000000  
           __end_of_UART_Init 1298              __end_of_high_isr 1048                        ___lmul 10FC  
         __size_of_UART_Write 001C                __CFG_STVREN$ON 000000                        clear_0 129E  
                      _strlen 1152                     ??_isValid 0022                  __mediumconst 0000  
                   ??_low_isr 0011                        tblptrh 000FF7               ??_copyTmpBuffer 0022  
                      tblptrl 000FF6                        tblptru 000FF8                     ??_wait_ms 0030  
             __CFG_DSBOREN$ON 000000          __CFG_LS48MHZ$SYS48X8 000000                    __accesstop 0060  
     __end_of__initialization 12B0                 ___rparam_used 000001               __CFG_IOL1WAY$ON 000000  
        __CFG_WPEND$PAGE_WPFP 000000                __pcstackCOMRAM 0001               __CFG_DSWDTEN$ON 000000  
             __CFG_DSWDTPS$G2 000000               __CFG_OSC$INTOSC 000000                    __pbssBANK0 0060  
                     ?___lmul 0022                ___lmul@product 002A                    _appendChar 1318  
                     ?_strlen 0022                  ?_writeResult 0001                  ?_writeString 0028  
                ??_UART_Write 0023                       i2u47_40 0FF4                       i2u48_48 0FF6  
                     _SPBRGH1 000F7F                       _SPBRGH2 000F7D                       _RPINR16 000EF7  
                   ?_high_isr 0001                       _InitApp 12DE                       __Hparam 0000  
                     __Lparam 0000               __size_of___lmul 0056            __end_of_UART_Write 1318  
                __psmallconst 0F00                       __pcinit 1298                       __ramtop 0F00  
                     __ptext0 0F0C                       __ptext1 12BE                       __ptext2 1048  
                     __ptext3 12FC                       __ptext4 10A6                       __ptext5 10FC  
                     __ptext6 122C                       __ptext7 1330                       __ptext8 11EC  
                     __ptext9 11A6                       _isValid 122C               __size_of_strlen 0054  
                  _realString 0060                       _low_isr 0018                       _wait_ms 10A6  
                     main@var 0031                    ??_high_isr 0002                __pintcode_body 0FAE  
        end_of_initialization 12B0                 ??_clearBuffer 0028                 __Lmediumconst 0000  
                     int_func 0FAE                       postinc0 000FEE                   wait_ms@time 002E  
                     strlen@s 0022                     _UART_Init 1266                     _PORTDbits 000F83  
                 ?_appendChar 0001                UART_Write@data 0023              __CFG_CPUDIV$OSC1 000000  
                   _TRISAbits 000F92                     _TRISDbits 000F95             __CFG_SOSCSEL$HIGH 000000  
 __end_of_ConfigureOscillator 134E                  writeString@i 002D       __size_of_isItLongEnough 0012  
         __CFG_MSSP7B_EN$MSK7 000000           __end_of_clearBuffer 11EC                __end_of___lmul 1152  
                  ?_UART_Init 0022                __end_of_strlen 11A6           start_initialization 1298  
        __size_of_writeResult 0020          __size_of_writeString 005E         __end_of_copyTmpBuffer 122C  
         __size_of_appendChar 0018                      ??___lmul 002A             __CFG_ADCSEL$BIT10 000000  
                    ??_strlen 0024                   __pbssCOMRAM 0032             __size_of_high_isr 1040  
                 _clearBuffer 11A6                      ?_InitApp 0001                     __pintcode 0008  
                 __pintcodelo 0018                   ??_UART_Init 0026                      ?_isValid 0001  
                 __smallconst 0F00          __CFG_RTCOSC$T1OSCREF 000000                      ?_low_isr 0001  
                    ?_wait_ms 002E                copyTmpBuffer@i 0023                _isItLongEnough 1330  
                    _LATAbits 000F89              __CFG_WDTPS$32768 000000                  clearBuffer@i 0028  
               UART_Write@dev 0022                     _tmpString 00A6             UART_Init@baudrate 0022  
                ??_appendChar 0001             __CFG_CFGPLLEN$OFF 000000             ___lmul@multiplier 0022  
      __end_of_isItLongEnough 1342            __end_of_appendChar 1330              __size_of_InitApp 001E  
                    __Hrparam 0000                      __Lrparam 0000              __size_of_isValid 003A  
            __size_of_low_isr 008E                      __ptext10 1152                      __ptext11 1266  
                    __ptext12 12DE                      __ptext13 1342                      __ptext16 1318  
            __size_of_wait_ms 0056                      _high_isr 0008               ?_isItLongEnough 0001  
               __size_of_main 00A2                appendChar@data 0001  __size_of_ConfigureOscillator 000C  
                    int$flags 0038                 ??_writeResult 0030                 ??_writeString 002B  
                 _OSCTUNEbits 000F9B                      intlevel1 0000                      intlevel2 0000  
                ?_clearBuffer 0001                    _OSCCONbits 000FD3        __size_of_copyTmpBuffer 0040  
                wait_ms@timel 0032                      strlen@cp 0026                    _UART_Write 12FC  
         __end_of_writeResult 12DE           __end_of_writeString 10A6  
